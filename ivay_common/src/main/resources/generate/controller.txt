package {controllerPkgName};

import com.ivay.ivay_common.dto.Response;
import com.ivay.ivay_common.table.PageTableRequest;
import com.ivay.ivay_common.table.PageTableResponse;
import {servicePkgName}.{serviceName};
import {beanPackageName}.{beanName};
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("{beanParamName}s")
@Api(tags = "{controllerName}")
public class {controllerName} {

    @Autowired
    private {serviceName} {serviceParamName};

    @PostMapping("add")
    @ApiOperation(value = "保存")
    public Response<{beanName}> add(@RequestBody {beanName} {beanParamName}) {
        Response<{beanName}> response = new Response<>();
        response.setBo({serviceParamName}.add({beanParamName}));
        return response;
    }

    @GetMapping("get")
    @ApiOperation(value = "根据id获取")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "id", dataType = "Long", paramType = "query")
    })
    public Response<{beanName}> get(@RequestParam Long id) {
        Response<{beanName}> response = new Response<>();
        response.setBo({serviceParamName}.get(id));
        return response;
    }

    @PutMapping("update")
    @ApiOperation(value = "修改")
    public Response<{beanName}> update(@RequestBody {beanName} {beanParamName}) {
        Response<{beanName}> response = new Response<>();
        response.setBo({serviceParamName}.update({beanParamName}));
        return response;
    }

    @GetMapping("list")
    @ApiOperation(value = "列表")
    public PageTableResponse list(PageTableRequest request) {
        return {serviceParamName}.list(request);
    }

    @DeleteMapping("delete")
    @ApiOperation(value = "删除")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "id", dataType = "Long", paramType = "query")
    })
    public Response<Integer> delete(@RequestParam Long id) {
        Response<Integer> response = new Response<>();
        response.setBo({serviceParamName}.delete(id));
        return response;
    }
}
