<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ivay.ivay_repository.dao.master.XCollectionCalculateDao">

    <sql id="list_condition">
        <where>
			<if test="params.id != null and params.id != ''">
				and id = #{params.id} 
			</if>
			<if test="params.calculateDate != null and params.calculateDate != ''">
				and calculate_date = #{params.calculateDate} 
			</if>
			<if test="params.overdueOrder != null and params.overdueOrder != ''">
				and overdue_order = #{params.overdueOrder} 
			</if>
			<if test="params.overdueUser != null and params.overdueUser != ''">
				and overdue_user = #{params.overdueUser} 
			</if>
			<if test="params.overduePrincipal != null and params.overduePrincipal != ''">
				and overdue_principal = #{params.overduePrincipal} 
			</if>
			<if test="params.amountReceivable != null and params.amountReceivable != ''">
				and amount_receivable = #{params.amountReceivable} 
			</if>
			<if test="params.numberRepay != null and params.numberRepay != ''">
				and number_repay = #{params.numberRepay} 
			</if>
			<if test="params.amountRepay != null and params.amountRepay != ''">
				and amount_repay = #{params.amountRepay} 
			</if>
			<if test="params.createTime != null">
				and create_time = #{params.createTime} 
			</if>
			<if test="params.updateTime != null">
				and update_time = #{params.updateTime} 
			</if>

        </where>
    </sql>

    <select id="count" resultType="int">
        select count(1) from x_collection_calculate t
        <include refid="list_condition"/>
    </select>

    <select id="list" resultType="com.ivay.ivay_repository.model.XCollectionCalculate">
        select * from x_collection_calculate t
        <include refid="list_condition"/>
        <if test="params.orderBy!=null and params.orderBy!=''">
            ${params.orderBy}
        </if>
        <if test="limit != null and limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>

	<update id="update">
        update x_collection_calculate
        <set>
			<if test="calculateDate != null">
				calculate_date = #{calculateDate}, 
			</if>
			<if test="overdueOrder != null">
				overdue_order = #{overdueOrder}, 
			</if>
			<if test="overdueUser != null">
				overdue_user = #{overdueUser}, 
			</if>
			<if test="overduePrincipal != null">
				overdue_principal = #{overduePrincipal}, 
			</if>
			<if test="amountReceivable != null">
				amount_receivable = #{amountReceivable}, 
			</if>
			<if test="numberRepay != null">
				number_repay = #{numberRepay}, 
			</if>
			<if test="amountRepay != null">
				amount_repay = #{amountRepay}, 
			</if>
			<if test="createTime != null">
				create_time = #{createTime}, 
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime}, 
			</if>

        </set>
        where id = #{id}
    </update>

	<!-- 获取催收报表的逾期订单统计 -->
	<select id="selectCollectionsCalculate" resultType="com.ivay.ivay_repository.model.XCollectionCalculate">
		SELECT
		any_value(t1.due_time) AS calculate_date,
		SUM( t1.due_amount ) AS overdue_principal,
		SUM( t1.amount ) AS amount_receivable,
		COUNT( order_id ) AS overdue_order,
		count( user_gid ) AS overdue_user
		FROM
		(
		SELECT
		due_time,
		due_amount,
		( due_amount + overdue_fee_total ) AS amount,
		order_id,
		user_gid
		FROM
		x_record_loan
		WHERE
		loan_status = 1
		AND repayment_status != 2
		<!-- AND due_time &lt; DATE_FORMAT( SYSDATE( ), '%Y%m%d' )-->
		AND due_time &lt;= #{endDate} AND due_time &gt; #{beginDate}
		) t1
	</select>

	<!-- 获取催收报表的还款统计 -->
	<select id="selectRepaytionCalculate" resultType="com.ivay.ivay_repository.model.XCollectionCalculate">
		SELECT
		any_value(calculate_time) as calculate_time,
		count( DISTINCT t5.user_gid ) AS number_repay,
		SUM( t5.repayment_amount ) AS amount_repay
		FROM
		(
		SELECT
		t3.order_id,
		t3.user_gid,
		t4.record_loan_gid,
		t4.repayment_amount,
		DATE_FORMAT( t4.create_time, '%Y%m%d' ) AS calculate_time
		FROM
		(
		SELECT
			t1.*,
			t2.gid
		FROM
			( SELECT order_id, any_value(t0.user_gid) as user_gid, any_value(t0.update_time) as update_time FROM
				(SELECT order_id, user_gid, update_time FROM x_collection_task WHERE collector_id IS NOT NULL

				ORDER BY update_time limit 10000000000)t0 GROUP BY t0.order_id) t1

		LEFT JOIN x_record_loan t2 ON t1.order_id = t2.order_id) t3

		INNER JOIN ( SELECT record_loan_gid, repayment_amount, create_time FROM x_record_repayment WHERE
		    create_time &lt;= #{endDate} AND create_time &gt; #{beginDate} AND repayment_status = 2 ) t4

		ON t3.gid = t4.record_loan_gid AND t3.update_time &lt; t4.create_time
		) t5
	</select>

	<!-- 查询催收统计列表 -->
    <select id="selectCalculateList" resultType="com.ivay.ivay_repository.model.XCollectionCalculate">
		SELECT
			*
		FROM
			x_collection_calculate
		<where>
			<if test="params.beginTime != null">
				and calculate_date &gt;= #{params.beginTime}
			</if>
			<if test="params.endTime != null">
				and calculate_date &lt;= #{params.endTime}
			</if>
		</where>
		ORDER BY
		calculate_date DESC

		<if test="limit != null and limit != 0">
			limit #{offset}, #{limit}
		</if>
	</select>

	<!-- 查询催收统计总数 -->
	<select id="selectTotalCalculate" resultType="com.ivay.ivay_repository.dto.CollectionCalculateResult">
		SELECT
		SUM( overdue_order ) AS total_overdue_order,
		SUM( overdue_user ) AS total_overdue_user,
		SUM( overdue_principal ) AS total_overdue_money,
		SUM( amount_receivable ) AS total_receivable,
		SUM( number_repay ) AS total_repay_user,
		SUM( amount_repay ) AS total_repay_money
		FROM
		x_collection_calculate
		<where>
			<if test="params.beginTime != null">
				and calculate_date &gt;= #{params.beginTime}
			</if>
			<if test="params.endTime != null">
				and calculate_date &lt;= #{params.endTime}
			</if>
		</where>
	</select>

	<!-- 查询催收统计列表记录总数 -->
	<select id="selectCalculateListCount" resultType="java.lang.Integer">
		SELECT
		count(1)
		FROM
		x_collection_calculate
		<where>
			<if test="params.beginTime != null">
				and calculate_date &gt;= #{params.beginTime}
			</if>
			<if test="params.endTime != null">
				and calculate_date &lt;= #{params.endTime}
			</if>
		</where>
	</select>

	<!-- 还款名单 -->
	<select id="selectRepayList" resultType="com.ivay.ivay_repository.dto.CollectionRepayDetail">
		SELECT
			t5.*,
			t6.name
		FROM
			(
		SELECT
			t3.order_id,
			t3.user_gid,
			t3.due_time,
			t4.record_loan_gid,
			t4.repayment_amount,
			t4.create_time
		FROM
			(
		SELECT
			t1.*,
			t2.gid,
			t2.due_time
		FROM
			(
		SELECT
			order_id,
			any_value ( t0.user_gid ) AS user_gid,
			any_value ( t0.update_time ) AS update_time
		FROM
			( SELECT order_id, user_gid, update_time FROM x_collection_task WHERE collector_id IS NOT NULL
			 ORDER BY update_time LIMIT 10000000000 ) t0
		GROUP BY
			t0.order_id
			) t1
			LEFT JOIN x_record_loan t2 ON t1.order_id = t2.order_id
			) t3
			INNER JOIN ( SELECT record_loan_gid, repayment_amount, create_time FROM x_record_repayment WHERE create_time &lt;= #{params.endDate}
				AND create_time &gt; #{params.beginDate} AND repayment_status = 2 ) t4 ON t3.gid = t4.record_loan_gid
				AND t3.update_time &lt; t4.create_time
			) t5
			LEFT JOIN x_user_info t6 ON t5.user_gid = t6.user_gid
			ORDER BY
			t5.due_time DESC

			<if test="limit != null and limit != 0">
				limit #{offset}, #{limit}
			</if>
	</select>

	<!-- 还款名单记录数 -->
	<select id="selectRepayListCount" resultType="java.lang.Integer">
		SELECT
			count(1)
		FROM
			(
		SELECT
			t3.order_id,
			t3.user_gid,
			t3.due_time,
			t4.record_loan_gid,
			t4.repayment_amount,
			t4.create_time
		FROM
			(
		SELECT
			t1.*,
			t2.gid,
			t2.due_time
		FROM
			(
		SELECT
			order_id,
			any_value ( t0.user_gid ) AS user_gid,
			any_value ( t0.update_time ) AS update_time
		FROM
			( SELECT order_id, user_gid, update_time FROM x_collection_task WHERE collector_id IS NOT NULL

			 ORDER BY update_time LIMIT 10000000000 ) t0
		GROUP BY
			t0.order_id
			) t1
			LEFT JOIN x_record_loan t2 ON t1.order_id = t2.order_id
			) t3
			INNER JOIN ( SELECT record_loan_gid, repayment_amount, create_time FROM x_record_repayment WHERE create_time &lt;= #{params.endDate}
				AND create_time &gt; #{params.beginDate} AND repayment_status = 2 ) t4 ON t3.gid = t4.record_loan_gid
				AND t3.update_time &lt; t4.create_time
			) t5
			LEFT JOIN x_user_info t6 ON t5.user_gid = t6.user_gid
	</select>

	<!-- 根据统计时间查询对象 -->
	<select id="getByCalculateTime" resultType="com.ivay.ivay_repository.model.XCollectionCalculate">
		SELECT
			*
		FROM
			x_collection_calculate
		WHERE
			calculate_date = DATE_FORMAT( #{date}, '%Y%m%d' )
	</select>

	<select id="selectExcelList" resultType="com.ivay.ivay_repository.model.XCollectionCalculate">
		SELECT
		*
		FROM
		x_collection_calculate
		<where>
			<if test="beginTime != null">
				and calculate_date &gt;= #{beginTime}
			</if>
			<if test="endTime != null">
				and calculate_date &lt;= #{endTime}
			</if>
		</where>
		ORDER BY
		calculate_date DESC
	</select>

</mapper>
