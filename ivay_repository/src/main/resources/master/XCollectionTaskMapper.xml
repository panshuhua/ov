<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ivay.ivay_repository.dao.master.XCollectionTaskDao">

    <sql id="list_condition">
        <where>
            <if test="params.id != null and params.id != ''">
				and id = #{params.id} 
			</if>
			<if test="params.orderId != null and params.orderId != ''">
				and order_id = #{params.orderId} 
			</if>
			<if test="params.repaymentGid != null and params.repaymentGid != ''">
				and repayment_gid = #{params.repaymentGid} 
			</if>
			<if test="params.collectorId != null and params.collectorId != ''">
				and collector_id = #{params.collectorId} 
			</if>
			<if test="params.collectionStatus != null and params.collectionStatus != ''">
				and collection_status = #{params.collectionStatus} 
			</if>
			<if test="params.dueCollectionAmount != null and params.dueCollectionAmount != ''">
				and due_collection_amount = #{params.dueCollectionAmount} 
			</if>
			<if test="params.collectionAmount != null and params.collectionAmount != ''">
				and collection_amount = #{params.collectionAmount} 
			</if>
			<if test="params.collectionOverdueFee != null and params.collectionOverdueFee != ''">
				and collection_overdue_fee = #{params.collectionOverdueFee} 
			</if>
			<if test="params.collectionRepayStatus != null">
				collection_repay_status = #{params.collectionRepayStatus},
			</if>
			<if test="params.createTime != null and params.createTime != ''">
				and create_time = #{params.createTime} 
			</if>
			<if test="params.updateTime != null and params.updateTime != ''">
				and update_time = #{params.updateTime} 
			</if>
			<if test="params.enableFlag != null and params.enableFlag != ''">
				and enable_flag = #{params.enableFlag} 
			</if>
        </where>
    </sql>

    <select id="count" resultType="int">
        select count(1) from x_collection_task t
        <include refid="list_condition"/>
    </select>

    <select id="list" resultType="com.ivay.ivay_repository.model.XCollectionTask">
        select * from x_collection_task t
        <include refid="list_condition"/>
        <if test="params.orderBy!=null and params.orderBy!=''">
            ${params.orderBy}
        </if>
        <if test="limit != null and limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <update id="update">
        update x_collection_task t
        <set>
            <if test="orderId != null">
				order_id = #{orderId}, 
			</if>
			<if test="collectorId != null">
				collector_id = #{collectorId}, 
			</if>
			<if test="collectionStatus != null">
				collection_status = #{collectionStatus}, 
			</if>
			<if test="dueCollectionAmount != null">
				due_collection_amount = #{dueCollectionAmount}, 
			</if>
			<if test="collectionAmount != null">
				collection_amount = #{collectionAmount}, 
			</if>
			<if test="collectionOverdueFee != null">
				collection_overdue_fee = #{collectionOverdueFee}, 
			</if>
			<if test="collectionRepayStatus != null">
				collection_repay_status = #{collectionRepayStatus},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime}, 
			</if>
			<if test="repayTime != null">
				repay_time = #{repayTime},
			</if>
			<if test="enableFlag != null">
				enable_flag = #{enableFlag}, 
			</if>
        </set>
        where t.id = #{id}
    </update>

	<!-- 批量插入催收档案（定时任务） -->
	<insert id="saveBatch" parameterType="java.util.List">
		INSERT INTO x_collection_task(order_id,user_gid,collection_status,due_collection_amount,collection_repay_status,create_time,update_time)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.orderId},
			#{item.userGid},
			#{item.collectionStatus},
			#{item.dueCollectionAmount},
			#{item.collectionRepayStatus},
			#{item.createTime},
			#{item.updateTime})
		</foreach>
	</insert>

	<!-- 查询催收订单中的所有订单号 -->
	<select id="selectOrderIds" resultType="java.lang.String">
		SELECT order_id FROM x_collection_task
	</select>

	<sql id="list_params_condition">
		(
		SELECT
		t5.order_id,
		t5.user_gid,
		t5.assign_time,
		t5.collector_id,
		t5.collection_repay_status,
		t5.name,
		t5.phone,
		t5.identity_card,
		t5.due_time,
		t5.overdue_day,
		t5.amount,
		t5.id,
		t5.collection_status,
		t6.id as user_id,
		t6.username
		FROM
		(
		SELECT
		t3.order_id,
		t3.user_gid,
		t3.assign_time,
		t3.collector_id,
		t3.collection_repay_status,
		t3.name,
		t3.phone,
		t3.identity_card,
		t3.id,
		t3.collection_status,
		t4.due_time,
		t4.amount,
		t4.overdue_day
		FROM
		(
		SELECT
		t1.order_id,
		t1.user_gid,
		t1.id,
		t1.assign_time,
		t1.collector_id,
		t1.collection_repay_status,
		t1.collection_status,
		t2.name,
		t2.phone,
		t2.identity_card
		FROM
		(
		SELECT t0.order_id,any_value(id) as id,any_value(user_gid) as user_gid,any_value(assign_time) as assign_time,any_value(collector_id) as collector_id, any_value(collection_repay_status) as collection_repay_status,any_value(collection_status) as collection_status FROM
		(SELECT id,order_id, user_gid, create_time AS assign_time, collector_id, collection_repay_status,collection_status FROM x_collection_task ORDER BY assign_time DESC limit 10000000000)t0
		GROUP BY t0.order_id
		) t1
		LEFT JOIN
		( SELECT user_gid, name, phone, identity_card FROM x_user_info WHERE 1 = 1 ) t2
		ON t1.user_gid = t2.user_gid
		) t3
		LEFT JOIN (
		SELECT
		order_id,
		due_time,
		(due_amount + overdue_fee) as amount,
		DATEDIFF( SYSDATE( ), DATE_FORMAT( due_time, "%y%m%d" ) ) AS overdue_day
		FROM
		x_record_loan
		WHERE
		1 = 1
		) t4
		ON t3.order_id = t4.order_id
		) t5
		LEFT JOIN
		sys_user t6
		ON t5.collector_id = t6.id
		) t7
		<where>
			<if test="params.name != null and params.name != ''">
				and t7.name = #{params.name}
			</if>
			<if test="params.phone != null and params.phone != ''">
				and t7.phone = #{params.phone}
			</if>
			<if test="params.identityCard != null and params.identityCard != ''">
				and t7.identity_card = #{params.identityCard}
			</if>
			<if test="params.overdueDayMin != null and params.overdueDayMin != ''">
				and t7.overdue_day &gt;= #{params.overdueDayMin}
			</if>
			<if test="params.overdueDayMax != null and params.overdueDayMax != ''">
				and t7.overdue_day &lt; #{params.overdueDayMax}
			</if>
			<if test="params.username != null and params.username != ''">
				and t7.username like concat('%', #{params.username} ,'%')
			</if>
			<if test="params.collectionRepayStatus != null and params.collectionRepayStatus != ''">
				and t7.collection_repay_status = #{params.collectionRepayStatus}
			</if>
			<if test="params.collectionStatus != null and params.collectionStatus != ''">
				and t7.collection_status = #{params.collectionStatus}
			</if>
		</where>
	</sql>

	<select id="selectParamsListCount" resultType="int">
		select count(1) from
		<include refid="list_params_condition"/>
	</select>

	<select id="listByParams" resultType="com.ivay.ivay_repository.dto.CollectionTaskResult">
		SELECT
		*
		FROM
		<include refid="list_params_condition"/>
		<!--(
		SELECT
			t5.order_id,
			t5.user_gid,
			t5.assign_time,
			t5.collector_id,
			t5.name,
			t5.phone,
			t5.identity_card,
			t5.due_time,
			t5.overdue_day,
			t5.amount,
			t6.username
		FROM
			(
				SELECT
					t3.order_id,
					t3.user_gid,
					t3.assign_time,
					t3.collector_id,
					t3.name,
					t3.phone,
					t3.identity_card,
					t4.due_time,
					t4.amount,
					t4.overdue_day
				FROM
					(
						SELECT
							t1.order_id,
							t1.user_gid,

							t1.assign_time,
							t1.collector_id,
							t2.name,
							t2.phone,
							t2.identity_card
						FROM
							( SELECT order_id, user_gid, create_time AS assign_time, collector_id FROM x_collection_task
								<where>
									<if test="params.collectionStatus != null and params.collectionStatus != ''">
										and collection_status = #{params.collectionStatus}
									</if>
								</where>
							 ) t1
						LEFT JOIN
							( SELECT user_gid, name, phone, identity_card FROM x_user_info WHERE 1 = 1 ) t2
						ON t1.user_gid = t2.user_gid
					) t3
				LEFT JOIN (
					SELECT
					order_id,
					due_time,
					(due_amount + overdue_fee) as amount,
					DATEDIFF( SYSDATE( ), DATE_FORMAT( due_time, "%y%m%d" ) ) AS overdue_day
					FROM
					x_record_loan
					WHERE
					1 = 1
					) t4
				ON t3.order_id = t4.order_id
			) t5
		LEFT JOIN
			sys_user t6
		ON t5.collector_id = t6.id
		) t7
		<where>
			<if test="params.name != null and params.name != ''">
				and t7.name = #{params.name}
			</if>
			<if test="params.phone != null and params.phone != ''">
				and t7.phone = #{params.phone}
			</if>
			<if test="params.identityCard != null and params.identityCard != ''">
				and t7.identity_card = #{params.identityCard}
			</if>
			<if test="params.overdueDayMin != null and params.overdueDayMin != ''">
				and t7.overdue_day &gt;= #{params.overdueDayMin}
			</if>
			<if test="params.overdueDayMax != null and params.overdueDayMax != ''">
				and t7.overdue_day &lt; #{params.overdueDayMax}
			</if>
			<if test="params.username != null and params.username != ''">
				and t7.username = #{params.username}
			</if>
			<if test="params.repaymentStatus != null and params.repaymentStatus != ''">
				and t7.repayment_status = #{params.repaymentStatus}
			</if>
			<if test="params.collectionStatus != null and params.collectionStatus != ''">
				and t7.collection_status = #{params.collectionStatus}
			</if>
		</where>-->
		ORDER BY
		t7.due_time DESC

		<if test="limit != null and limit != 0">
			limit #{offset}, #{limit}
		</if>
	</select>

	<!-- 根据用户gid查找正在催收的任務 -->
    <select id="findNewCollectionByUserGid" resultType="com.ivay.ivay_repository.model.XCollectionTask">
		SELECT
			*
		FROM
			x_collection_task
		WHERE
			user_gid = #{userGid}
			AND collection_status != 3
		ORDER BY create_time DESC limit 1
	</select>

	<sql id="my_collection_condition">
		(
		SELECT
			t5.order_id,
			t5.user_gid,
			t5.assign_time,
			t5.collector_id,
			t5.collection_repay_status,
			t5.repay_time,
			t5.NAME,
			t5.phone,
			t5.identity_card,
			t5.due_time,
			t5.overdue_day,
			t5.amount,
			t5.id,
			t6.id AS user_id,
			t6.username
		FROM
			(
		SELECT
			t3.order_id,
			t3.user_gid,
			t3.assign_time,
			t3.collector_id,
			t3.collection_repay_status,
			t3.repay_time,
			t3.NAME,
			t3.phone,
			t3.identity_card,
			t3.id,
			t4.due_time,
			t4.amount,
			t4.overdue_day
		FROM
			(
		SELECT
			t1.order_id,
			t1.user_gid,
			t1.id,
			t1.assign_time,
			t1.collector_id,
			t1.collection_repay_status,
			t1.repay_time,
			t2.NAME,
			t2.phone,
			t2.identity_card
		FROM
			( SELECT order_id, user_gid, id, create_time AS assign_time, collector_id, collection_repay_status, update_time, repay_time FROM x_collection_task WHERE collector_id = #{params.collectorId} ) t1
			LEFT JOIN ( SELECT user_gid, NAME, phone, identity_card FROM x_user_info WHERE 1 = 1 ) t2 ON t1.user_gid = t2.user_gid
			) t3
			LEFT JOIN (
		SELECT
			order_id,
			due_time,
			( due_amount + overdue_fee ) AS amount,
			DATEDIFF( SYSDATE( ), DATE_FORMAT( due_time, "%y%m%d" ) ) AS overdue_day
		FROM
			x_record_loan
		WHERE
			1 = 1
			) t4 ON t3.order_id = t4.order_id
			) t5
			LEFT JOIN sys_user t6 ON t5.collector_id = t6.id
			) t7
		<where>
			<if test="params.name != null and params.name != ''">
				and t7.name = #{params.name}
			</if>
			<if test="params.phone != null and params.phone != ''">
				and t7.phone = #{params.phone}
			</if>
			<if test="params.identityCard != null and params.identityCard != ''">
				and t7.identity_card = #{params.identityCard}
			</if>
			<if test="params.overdueDayMin != null and params.overdueDayMin != ''">
				and t7.overdue_day &gt;= #{params.overdueDayMin}
			</if>
			<if test="params.overdueDayMax != null and params.overdueDayMax != ''">
				and t7.overdue_day &lt; #{params.overdueDayMax}
			</if>
			<if test="params.username != null and params.username != ''">
				and t7.username = #{params.username}
			</if>
			<if test="params.collectionRepayStatus != null and params.collectionRepayStatus != ''">
				and t7.collection_repay_status = #{params.collectionRepayStatus}
			</if>
			<if test="params.collectionStatus != null and params.collectionStatus != ''">
				and t7.collection_status = #{params.collectionStatus}
			</if>

			<if test="params.payDateStart != null and params.payDateStart != ''">
				and t7.due_time &gt;= #{params.payDateStart}
			</if>
			<if test="params.payDateEnd != null and params.payDateEnd != ''">
				and t7.due_time &lt;= #{params.payDateEnd}
			</if>
			<if test="params.collectionDateStart != null and params.collectionDateStart != ''">
				and t7.assign_time &gt;= #{params.collectionDateStart}
			</if>
			<if test="params.collectionDateEnd != null and params.collectionDateEnd != ''">
				and t7.assign_time &lt;= #{params.collectionDateEnd}
			</if>

			<if test="params.repayTimeStart != null and params.repayTimeStart != ''">
				and t7.repay_time &gt;= #{params.repayTimeStart}
			</if>
			<if test="params.repayTimeEnd != null and params.repayTimeEnd != ''">
				and t7.repay_time &lt;= #{params.repayTimeEnd}
			</if>
		</where>
	</sql>

	<!-- 我的催收記錄數量 -->
    <select id="getCollectionListByUserGidCount" resultType="java.lang.Integer">
		select count(1) from
		<include refid="my_collection_condition"/>
	</select>

	<!-- 查詢我的催收 -->
	<select id="getCollectionListByUserGid" resultType="com.ivay.ivay_repository.dto.CollectionTaskResult">
		SELECT
			*
		FROM
		<include refid="my_collection_condition"/>
		ORDER BY
			t7.due_time DESC
	</select>

	<select id="loanOrderInfo" resultType="com.ivay.ivay_repository.model.XRecordLoan">
		SELECT x_record_loan.* FROM x_record_loan
		left join x_collection_task on x_record_loan.order_id = x_collection_task.order_id
		where x_collection_task.id=#{taskId}
	</select>

	<select id="repaymentInfo" resultType="com.ivay.ivay_repository.dto.XRepaymentAccountInfo">
		SELECT x_record_repayment.* FROM x_record_repayment
		left join x_collection_task on x_record_repayment.order_id = x_collection_task.order_id
		where x_collection_task.id=#{taskId}
	</select>

	<sql id="collection_repay_condition">
		(
		SELECT
		t5.order_id,
		t5.user_gid,
		t5.assign_time,
		t5.collector_id,
		t5.collection_repay_status,
		t5.repay_time,
		t5.NAME,
		t5.phone,
		t5.identity_card,
		t5.due_time,
		t5.overdue_day,
		t5.amount,
		t5.id,
		t5.real_repay,
		t6.id AS user_id,
		t6.username
		FROM
		(
		SELECT
		t3.order_id,
		t3.user_gid,
		t3.assign_time,
		t3.collector_id,
		t3.collection_repay_status,
		t3.repay_time,
		t3.NAME,
		t3.phone,
		t3.identity_card,
		t3.id,
		t3.real_repay,
		t4.due_time,
		t4.amount,
		t4.overdue_day
		FROM
		(
		SELECT
		t1.order_id,
		t1.user_gid,
		t1.id,
		t1.assign_time,
		t1.collector_id,
		t1.collection_repay_status,
		t1.repay_time,
		t1.real_repay,
		t2.NAME,
		t2.phone,
		t2.identity_card
		FROM
		( SELECT order_id, user_gid, id, create_time AS assign_time, collector_id, collection_repay_status, update_time, repay_time,(collection_amount + collection_overdue_fee) real_repay FROM x_collection_task WHERE collection_repay_status = 2 ) t1
		LEFT JOIN ( SELECT user_gid, NAME, phone, identity_card FROM x_user_info WHERE 1 = 1 ) t2 ON t1.user_gid = t2.user_gid
		) t3
		LEFT JOIN (
		SELECT
		order_id,
		due_time,
		( due_amount + overdue_fee ) AS amount,
		DATEDIFF( SYSDATE( ), DATE_FORMAT( due_time, "%y%m%d" ) ) AS overdue_day
		FROM
		x_record_loan
		WHERE
		1 = 1
		) t4 ON t3.order_id = t4.order_id
		) t5
		LEFT JOIN sys_user t6 ON t5.collector_id = t6.id
		) t7
		<where>
			<if test="params.name != null and params.name != ''">
				and t7.name = #{params.name}
			</if>
			<if test="params.phone != null and params.phone != ''">
				and t7.phone = #{params.phone}
			</if>
			<if test="params.identityCard != null and params.identityCard != ''">
				and t7.identity_card = #{params.identityCard}
			</if>
			<if test="params.overdueDayMin != null and params.overdueDayMin != ''">
				and t7.overdue_day &gt;= #{params.overdueDayMin}
			</if>
			<if test="params.overdueDayMax != null and params.overdueDayMax != ''">
				and t7.overdue_day &lt; #{params.overdueDayMax}
			</if>
			<if test="params.username != null and params.username != ''">
				and t7.username = #{params.username}
			</if>
			<if test="params.collectionRepayStatus != null and params.collectionRepayStatus != ''">
				and t7.collection_repay_status = #{params.collectionRepayStatus}
			</if>
			<if test="params.collectionStatus != null and params.collectionStatus != ''">
				and t7.collection_status = #{params.collectionStatus}
			</if>

			<if test="params.payDateStart != null and params.payDateStart != ''">
				and t7.due_time &gt;= #{params.payDateStart}
			</if>
			<if test="params.payDateEnd != null and params.payDateEnd != ''">
				and t7.due_time &lt;= #{params.payDateEnd}
			</if>
			<if test="params.collectionDateStart != null and params.collectionDateStart != ''">
				and t7.assign_time &gt;= #{params.collectionDateStart}
			</if>
			<if test="params.collectionDateEnd != null and params.collectionDateEnd != ''">
				and t7.assign_time &lt;= #{params.collectionDateEnd}
			</if>

			<if test="params.repayTimeStart != null and params.repayTimeStart != ''">
				and t7.repay_time &gt;= #{params.repayTimeStart}
			</if>
			<if test="params.repayTimeEnd != null and params.repayTimeEnd != ''">
				and t7.repay_time &lt;= #{params.repayTimeEnd}
			</if>
		</where>
	</sql>

	<!-- 查询催收回款列表 -->
	<select id="getCollectionsRepayList" resultType="com.ivay.ivay_repository.dto.CollectionTaskResult">
		SELECT
		*
		FROM
		<include refid="collection_repay_condition"/>
		ORDER BY
		t7.repay_time DESC
	</select>

	<!-- 查询催收回款列表数量 -->
	<select id="getCollectionsRepayListCount" resultType="java.lang.Integer">
		select count(1) from
		<include refid="collection_repay_condition"/>
	</select>

	<!-- 查询催收派单时的相关信息 -->
	<select id="getCollectionsByIds" resultType="com.ivay.ivay_repository.dto.CollectionTaskLoanInfo">
		SELECT
			t1.*,
			t2.loan_status,
			t2.repayment_status,
			t2.due_time,
			t2.due_amount,
			t2.overdue_fee
		FROM
			( SELECT id, order_id, collector_id FROM `x_collection_task` WHERE id IN
				<foreach collection="ids" item="id" open="(" separator="," close=")">
					#{id}
				</foreach>
			 ) t1
			LEFT JOIN x_record_loan t2 ON t1.order_id = t2.order_id
	</select>

	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			update x_collection_task
			<set>
				<if test="item.orderId != null">
					order_id = #{item.orderId},
				</if>
				<if test="item.userGid != null">
					user_gid = #{item.userGid},
				</if>
				<if test="item.collectorId != null">
					collector_id = #{item.collectorId},
				</if>
				<if test="item.collectionStatus != null">
					collection_status = #{item.collectionStatus},
				</if>
				<if test="item.dueCollectionAmount != null">
					due_collection_amount = #{item.dueCollectionAmount},
				</if>
				<if test="item.collectionAmount != null">
					collection_amount = #{item.collectionAmount},
				</if>
				<if test="item.collectionOverdueFee != null">
					collection_overdue_fee = #{item.collectionOverdueFee},
				</if>
				<if test="item.collectionRepayStatus != null">
					collection_repay_status = #{item.collectionRepayStatus},
				</if>
				<if test="item.updateTime != null">
					update_time = #{item.updateTime},
				</if>
				<if test="item.repayTime != null">
					repay_time = #{item.repayTime},
				</if>
				<if test="item.enableFlag != null">
					enable_flag = #{item.enableFlag},
				</if>
			</set>
			where id = #{item.id}
		</foreach>

	</update>

</mapper>
