<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ivay.ivay_repository.dao.master.XUserInfoDao">
    <update id="update">
        update x_user_info t
        <set>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="identityCard != null">
                identity_card = #{identityCard},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="education != null">
                education = #{education},
            </if>
            <if test="marital != null">
                marital = #{marital},
            </if>
            <if test="place != null">
                place = #{place},
            </if>
            <if test="income != null">
                income = #{income},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus},
            </if>
            <if test="accountStatus != null">
                account_status = #{accountStatus},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="creditLine != null">
                credit_line = #{creditLine},
            </if>
            <if test="creditLineCount != null">
                credit_line_count = #{creditLineCount},
            </if>
            <if test="canborrowAmount != null">
                canborrow_amount = #{canborrowAmount},
            </if>
            <if test="transPwd != null">
                trans_pwd = #{transPwd},
            </if>
            <if test="macCode != null">
                mac_code = #{macCode},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="fmcToken != null">
                fmc_token = #{fmcToken},
            </if>
            <if test="refuseReason != null">
                refuse_reason = #{refuseReason},
            </if>
            <if test="refuseType != null">
                refuse_type = #{refuseType},
            </if>
            <if test="auditTime != null">
                audit_time = #{auditTime},
            </if>
        </set>
        where t.user_gid = #{userGid} and enable_flag = "Y"
    </update>

    <!--邏輯刪除授信信息-->
    <delete id="delete">
        update x_user_info t set enable_flag = "N" where t.user_gid = #{userGid}
    </delete>

    <sql id="list_condition">
        <where>
            <if test="params.id != null and params.id != ''">
                and id = #{params.id}
            </if>
            <if test="params.phone != null and params.phone != ''">
                and phone = #{params.phone}
            </if>
            <if test="params.userGid != null and params.userGid != ''">
                and user_gid = #{params.userGid}
            </if>
            <if test="params.name != null and params.name != ''">
                and name = #{params.name}
            </if>
            <if test="params.identityCard != null and params.identityCard != ''">
                and identity_card = #{params.identityCard}
            </if>
            <if test="params.birthday != null and params.birthday != ''">
                and birthday = #{params.birthday}
            </if>
            <if test="params.sex != null and params.sex != ''">
                and sex = #{params.sex}
            </if>
            <if test="params.education != null and params.education != ''">
                and education = #{params.education}
            </if>
            <if test="params.marital != null and params.marital != ''">
                and marital = #{params.marital}
            </if>
            <if test="params.place != null and params.place != ''">
                and place = #{params.place}
            </if>
            <if test="params.income != null and params.income != ''">
                and income = #{params.income}
            </if>
            <if test="params.userStatus != null and params.userStatus != ''">
                and user_status = #{params.userStatus}
            </if>
            <if test="params.accountStatus != null and params.accountStatus != ''">
                and account_status = #{params.accountStatus}
            </if>
            <if test="params.createTime != null and params.createTime != ''">
                and create_time = #{params.createTime}
            </if>
            <if test="params.updateTime != null and params.updateTime != ''">
                and update_time = #{params.updateTime}
            </if>
            <if test="params.enableFlag != null and params.enableFlag != ''">
                and enable_flag = #{params.enableFlag}
            </if>
            <if test="params.password != null and params.password != ''">
                and password = #{params.password}
            </if>
            <if test="params.creditLine != null and params.creditLine != ''">
                and credit_line = #{params.creditLine}
            </if>
            <if test="params.creditLineCount != null and params.creditLineCount != ''">
                and credit_line_count = #{params.creditLineCount}
            </if>
            <if test="params.canborrowAmount != null and params.canborrowAmount != ''">
                and canborrow_amount = #{params.canborrowAmount}
            </if>
            <if test="params.transPwd != null and params.transPwd != ''">
                and trans_pwd = #{params.transPwd}
            </if>
            <if test="params.refuseReason != null and params.refuseReason != ''">
                and refuse_reason = #{params.refuseReason}
            </if>
            <if test="params.refuseType != null and params.refuseType != ''">
                and refuse_type = #{params.refuseType}
            </if>
            <if test="params.auditTime != null and params.auditTime != ''">
                and audit_time = #{params.auditTime}
            </if>
        </where>
    </sql>

    <select id="count" resultType="int">
        select count(1) from x_user_info t
        <include refid="list_condition"/>
    </select>

    <select id="list" resultType="com.ivay.ivay_repository.model.XUserInfo">
        select * from x_user_info t
        <include refid="list_condition"/>
        <if test="params.orderBy != null and params.orderBy != ''">
            order by ${params.orderBy} desc
        </if>
        <if test="limit != null and limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="getCreditLine" resultType="com.ivay.ivay_repository.dto.CreditLine">
        select
            user_gid,
            credit_line,
            canborrow_amount,
            user_status,
            (
                SELECT COUNT(*) FROM x_record_loan x WHERE x.user_gid = #{userGid}
                AND x.loan_status=1 AND x.repayment_status!=2 and x.due_time &lt; sysdate()
            ) overdueCount
        from x_user_info t
        where t.user_gid = #{userGid} and t.enable_flag='Y'
    </select>

    <!--查出待审核用户-->
    <select id="toBeAuditedList" resultType="com.ivay.ivay_repository.model.XUserInfo">
        SELECT x.*
        FROM x_user_info x
        WHERE x.account_status='0' AND x.user_status="2" AND (x.credit_line IS null OR x.credit_line=0) AND
        x.enable_flag="Y"
        <if test="num !=null and num!=0">
            AND DATEDIFF(date_format(now(), '%Y-%m-%d'),update_time) &lt;= #{num,jdbcType=INTEGER}
        </if>
    </select>

    <sql id="audit_list_condition">
        left JOIN x_user_ext_info xuei ON xui.user_gid=xuei.user_gid
        left JOIN x_audit_user xau ON xui.user_gid=xau.user_gid
        <where>
            xui.user_status >=2
            and xui.account_status=0
            and xui.enable_flag='Y'
            and xuei.enable_flag='Y'
            <if test="params.phone != null and params.phone != ''">
                and xui.phone like concat("%",#{params.phone},"%")
            </if>
            <if test="params.userGid != null and params.userGid != ''">
                and xui.user_gid like concat("%", #{params.userGid},"%")
            </if>
            <if test="params.name != null and params.name != ''">
                and xui.name like concat("%", #{params.name},"%")
            </if>
            <if test="params.auditStatus != null and params.auditStatus != ''">
                <if test="params.auditStatus!= '3'.toString()">
                    and xui.user_status = #{params.auditStatus}
                </if>
                <if test="params.auditStatus == '3'.toString()">
                    and "3456" like concat("%", xui.user_status,"%")
                </if>
            </if>
            <if test="params.fromTime != null and params.fromTime != ''">
                and unix_timestamp(xuei.update_time) >= unix_timestamp(#{params.fromTime})
            </if>
            <if test="params.toTime != null and params.toTime != ''">
                and unix_timestamp(#{params.toTime}) >= unix_timestamp(xuei.update_time)
            </if>

            <if test="params.auditId != null and params.auditId != ''">
                and xau.sys_user_id
                <choose>
                    <when test="params.auditId == '-2'">
--                     未指定审计员
                        is null
                    </when>
                    <otherwise>
                        =#{params.auditId}
                    </otherwise>
                </choose>
            </if>
            <if test="params.role != null and params.role != ''">
                <if test="params.role == 'ovayAudit'">
                    and xau.sys_user_id = #{params.loginId}
                    and xau.enable_flag='Y'
                </if>
            </if>
        </where>
    </sql>

    <select id="auditCount" resultType="int">
        select count(1)
        from x_user_info xui
        <include refid="audit_list_condition"/>
    </select>

    <select id="auditList" resultType="com.ivay.ivay_repository.dto.XAuditListInfo">
        select
            xui.user_gid,
            xui.name,
            xui.phone,
            case xui.user_status
                WHEN '2' THEN '2'
                WHEN '3' THEN '3'
                WHEN '4' THEN '3'
                WHEN '5' THEN '3'
                WHEN '6' THEN '3'
                WHEN '7' THEN '7'
                WHEN '8' THEN '8'
            END audit_status,
            xuei.update_time create_time,
            (SELECT count(*)-1 FROM x_user_info x WHERE x.name=xui.name and x.enable_flag='Y') countSameName,
            (SELECT "w" WHERE EXISTS (SELECT 1 FROM risk_user t WHERE t.phone = xui.phone)) userType
        from x_user_info xui
        <include refid="audit_list_condition"/>
        order by xuei.update_time desc
        <if test="limit != null and limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <sql id="audit_list_condition_v2">
        left JOIN x_user_ext_info xuei ON xui.user_gid=xuei.user_gid
        left JOIN x_audit_user xau ON xui.user_gid=xau.user_gid
        <where>
            xui.user_status >=2
            and xui.account_status=0
            and xui.enable_flag='Y'
            and xuei.enable_flag='Y'
            <if test="params.phone != null and params.phone != ''">
                and xui.phone like concat("%",#{params.phone},"%")
            </if>
            <if test="params.userGid != null and params.userGid != ''">
                and xui.user_gid like concat("%", #{params.userGid},"%")
            </if>
            <if test="params.name != null and params.name != ''">
                and xui.name like concat("%", #{params.name},"%")
            </if>
            <if test="params.auditStatus != null and params.auditStatus != ''">
                <if test="params.auditStatus!= '3'.toString()">
                    and xui.user_status = #{params.auditStatus}
                </if>
                <if test="params.auditStatus == '3'.toString()">
                    and "3456" like concat("%", xui.user_status,"%")
                </if>
            </if>
            <if test="params.fromTime != null">
                and unix_timestamp(xuei.update_time) >= unix_timestamp(#{params.fromTime})
            </if>
            <if test="params.toTime != null">
                and unix_timestamp(#{params.toTime}) >= unix_timestamp(xuei.update_time)
            </if>

            <if test="params.auditId != null and params.auditId != ''">
                and xau.sys_user_id
                <choose>
                    <when test="params.auditId == '-2'">
                        --                     未指定审计员
                        is null
                    </when>
                    <otherwise>
                        =#{params.auditId}
                    </otherwise>
                </choose>
            </if>
            <if test="params.role != null and params.role != ''">
                <if test="params.role == 'ovayAudit'">
                    and xau.sys_user_id = #{params.loginId}
                    and xau.enable_flag='Y'
                </if>
            </if>
        </where>
    </sql>

    <select id="auditCountV2" resultType="int">
        select count(1)
        from x_user_info xui
        <include refid="audit_list_condition_v2"/>
    </select>

    <select id="auditListV2" resultType="com.ivay.ivay_repository.dto.XAuditListInfo">
        select
        xui.user_gid,
        xui.name,
        xui.phone,
        case xui.user_status
        WHEN '2' THEN '2'
        WHEN '3' THEN '3'
        WHEN '4' THEN '3'
        WHEN '5' THEN '3'
        WHEN '6' THEN '3'
        WHEN '7' THEN '7'
        WHEN '8' THEN '8'
        END audit_status,
        xuei.update_time create_time,
        (SELECT count(*)-1 FROM x_user_info x WHERE x.name=xui.name and x.enable_flag='Y') countSameName,
        (SELECT "w" WHERE EXISTS (SELECT 1 FROM risk_user t WHERE t.phone = xui.phone)) userType
        from x_user_info xui
        <include refid="audit_list_condition_v2"/>
        order by xuei.update_time desc
        <if test="limit != null and limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="auditDetail" parameterType="java.lang.String" resultType="com.ivay.ivay_repository.dto.XAuditDetail">
        select
            xui.user_gid,
            xui.name,
            (SELECT count(*)-1 FROM x_user_info t WHERE t.`name`=xui.name and t.enable_flag='Y') countSameName,
            xui.phone,
            xui.identity_card,
            xui.birthday,
            xui.sex,
            (SELECT url from file_info t WHERE t.id=xuei.photo1_url) photo1_url,
            (SELECT url from file_info t WHERE t.id=xuei.photo2_url) photo2_url,
            (SELECT url from file_info t WHERE t.id=xuei.photo3_url) photo3_url,
            (SELECT "w" WHERE EXISTS (SELECT 1 FROM risk_user t WHERE t.phone = xui.phone)) userType
        from x_user_info xui
        left JOIN x_user_ext_info xuei ON xui.user_gid=xuei.user_gid
        where xui.user_gid=#{userGid} and xui.enable_flag='Y'
    </select>

    <select id="getAuditQualificationObj" parameterType="java.lang.String" resultType="com.ivay.ivay_repository.dto.XLoanQualification">
        SELECT
            TIMESTAMPDIFF(YEAR,xui.birthday,now()) age,
            xui.identity_card,
            xui.mac_code,
            xuei.major_phone
        FROM x_user_info xui
        LEFT JOIN x_user_ext_info xuei ON xui.user_gid=xuei.user_gid
        WHERE xui.user_gid=#{userGid}
    </select>
    
    <select id="getMaxOverdueDay" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT
		max(
			CASE repayment_status
			WHEN 2 THEN
        	  DATEDIFF(last_repayment_time,due_time)
			ELSE
      		  DATEDIFF(date_format(now(),'%Y-%m-%d'),due_time)
    	END
		) over_time
		FROM x_record_loan
	    WHERE user_gid=#{userGid}
    </select>

    <select id="getOverdueCountsNow" parameterType="java.lang.String" resultType="java.lang.Integer">
       SELECT count(1) FROM x_record_loan
	   WHERE user_gid = #{userGid} 
	   AND repayment_status != 2
       AND DATEDIFF(
		date_format(now(), '%Y-%m-%d'),
 		due_time
 	   ) <![CDATA[ >= ]]> 0
 	   AND due_time <![CDATA[ < ]]>now()
    </select>

    <select id="getlastOverdueDay" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT
		(
			CASE repayment_status
			WHEN 2 THEN
      			DATEDIFF(last_repayment_time,due_time)
			ELSE
      			DATEDIFF(date_format(now(),'%Y-%m-%d'),due_time)
    		END
		) over_time
		FROM x_record_loan 
		WHERE user_gid=#{userGid}  
		AND loan_time in(select max(loan_time) from x_record_loan)
    </select>

    <select id="getUserCountsBygps" parameterType="java.math.BigDecimal" resultType="java.lang.Integer">
       SELECT count(1) from (
		  SELECT
			 ROUND(
				6378.138 * 2 * ASIN(
					SQRT(
						POW(
							SIN(
								(
									#{latitude} * PI() / 180 - latitude * PI() / 180
								) / 2
							),
							2
						) + COS(#{latitude} * PI() / 180) * COS(latitude * PI() / 180) * POW(
							SIN(
								(
									#{longitude} * PI() / 180 - longitude * PI() / 180
								) / 2
							),
							2
						)
					)
				) * 1000
			) AS distance
		FROM
			x_user_risk
		WHERE DATE_FORMAT(create_time, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m') 
		HAVING
			distance <![CDATA[ <= ]]> 10
		) as lessten
    </select>

    <select id="countSameName" resultType="int">
        SELECT count(*) FROM x_user_info
        WHERE user_gid != #{params.userGid}
        AND `name`=(
            SELECT name FROM x_user_info WHERE user_gid = #{params.userGid}
        )
    </select>

    <select id="listSameName" resultType="com.ivay.ivay_repository.dto.XAuditListInfo">
        select
            xui.user_gid,
            xui.name,
            xui.phone,
            case xui.user_status
                WHEN '2' THEN '2'
                WHEN '3' THEN '3'
                WHEN '4' THEN '3'
                WHEN '5' THEN '3'
                WHEN '6' THEN '3'
                WHEN '7' THEN '7'
                WHEN '8' THEN '8'
            END audit_status,
            xuei.create_time createTime,
            xui.audit_time auditTime,
            (SELECT "w" WHERE EXISTS (SELECT 1 FROM risk_user t WHERE t.phone = xui.phone)) userType
        from x_user_info xui
        left JOIN x_user_ext_info xuei ON xui.user_gid=xuei.user_gid
        WHERE xui.user_gid != #{params.userGid}
        AND `name`=(
            SELECT name FROM x_user_info t WHERE t.user_gid = #{params.userGid}
        )
        ORDER BY xui.update_time DESC
        <if test="limit != null and limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <sql id="over_due_user_condition">
        SELECT 1 FROM x_record_loan xrl
        WHERE loan_status=1 AND repayment_status!=2 AND xui.user_gid=xrl.user_gid
        <if test="params.phone != null and params.phone != ''">
            and xui.phone like concat("%",#{params.phone},"%")
        </if>
        <if test="params.name != null and params.name != ''">
            and xui.name like concat("%",#{params.name},"%")
        </if>
        <if test="params.identityCard != null and params.identityCard != ''">
            and xui.identity_card like concat("%",#{params.identityCard},"%")
        </if>
        <choose>
            <!-- 逾期三天之内,不含3天 -->
            <when test="params.type == '0'.toString()">
                AND xrl.due_time &lt; sysdate() AND sysdate() &lt; DATE_ADD(xrl.due_time,INTERVAL 2 DAY)
            </when>
            <!-- 逾期超过三天,含3天 -->
            <when test="params.type == '1'.toString()">
                AND xrl.due_time &lt; DATE_ADD(sysdate(),INTERVAL -2 DAY)
            </when>
            <otherwise>
                AND xrl.due_time &lt; sysdate()
            </otherwise>
        </choose>
    </sql>

    <select id="countOverDueUsers" resultType="int">
        SELECT count(*)
        FROM x_user_info xui
        WHERE EXISTS (
            <include refid="over_due_user_condition" />
        )
    </select>

    <select id="overDueUsers" resultType="com.ivay.ivay_repository.model.XUserInfo">
        SELECT *
        FROM x_user_info xui
        WHERE EXISTS (
            <include refid="over_due_user_condition" />
        )
        ORDER BY name asc
        <if test="limit != null and limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>
</mapper>
